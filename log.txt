clang++ -c -o obj/main.o src/main.cpp -Iinclude -I/opt/homebrew/opt/boost/include -std=c++2b -g -fsanitize=address
In file included from src/main.cpp:3:
In file included from include/Parser.hpp:8:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/include/qi.hpp:16:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/action.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/meta_compiler.hpp:15:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/domain.hpp:18:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/support/context.hpp:24:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/include/transform.hpp:11:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/algorithm/transformation/transform.hpp:11:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/view/transform_view/transform_view.hpp:22:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector10.hpp:25:
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:107:30: error: no type named 'type' in 'boost::fusion::result_of::begin<int>'
                          >::type
                          ~~~^~~~
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:116:36: note: in instantiation of template class 'boost::fusion::vector_detail::result_of::forward_at_c<int &, 1>' requested here
        inline typename result_of::forward_at_c<Sequence, N>::type
                                   ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:224:43: note: while substituting deduced template arguments into function template 'forward_at_c' [with N = 1, Sequence = int &]
                (void(store<I, T>::elem = vector_detail::forward_at_c<I>(static_cast<Sequence&&>(seq))), ...);
                                          ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:302:19: note: in instantiation of function template specialization 'boost::fusion::vector_detail::vector_data<std::integer_sequence<unsigned long, 0, 1>, instr::DataType, std::variant<int, unsigned int>>::assign_sequence<int &>' requested here
            base::assign_sequence(std::forward<Sequence>(rhs));
                  ^
/opt/homebrew/opt/boost/include/boost/proto/transform/default.hpp:154:41: note: in instantiation of function template specialization 'boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>>::operator=<int &>' requested here
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
                                        ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:74:24: note: in instantiation of member function 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &>::operator()' requested here
                return what()(e, phoenix::env(s), actions(s));
                       ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:34:9: note: (skipping 28 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
        BOOST_PROTO_TRANSFORM(evaluator)
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:228:9: note: expanded from macro 'BOOST_PROTO_TRANSFORM'
        BOOST_PROTO_TRANSFORM_(PrimitiveTransform, void)                                                        \
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:213:16: note: expanded from macro 'BOOST_PROTO_TRANSFORM_'
        return boost::proto::detail::apply_transform<transform_type(Expr const &, State const &)>()(e, s, d);   \
               ^
/opt/homebrew/opt/boost/include/boost/function/function_template.hpp:1022:5: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
    self_type(f).swap(*this);
    ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:191:19: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:255:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<std::__wrap_iter<char *>, boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> (), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>>, 0>, boost::spirit::locals<instr::DataType>>::define<mpl_::bool_<true>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
            define<mpl::true_>(r, expr, traits::matches<qi::domain, Expr>());
            ^
include/Parser.hpp:112:11: note: in instantiation of function template specialization 'boost::spirit::qi::operator%=<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
    start %= lexeme[
          ^
src/main.cpp:52:45: note: in instantiation of member function 'ConstInstrParser<std::__wrap_iter<char *>>::ConstInstrParser' requested here
    ConstInstrParser<std::string::iterator> parser; 
                                            ^
In file included from src/main.cpp:3:
In file included from include/Parser.hpp:8:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/include/qi.hpp:16:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/action.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/meta_compiler.hpp:15:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/domain.hpp:18:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/support/context.hpp:24:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/include/transform.hpp:11:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/algorithm/transformation/transform.hpp:11:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/view/transform_view/transform_view.hpp:22:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector10.hpp:25:
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:224:43: error: no matching function for call to 'forward_at_c'
                (void(store<I, T>::elem = vector_detail::forward_at_c<I>(static_cast<Sequence&&>(seq))), ...);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:302:19: note: in instantiation of function template specialization 'boost::fusion::vector_detail::vector_data<std::integer_sequence<unsigned long, 0, 1>, instr::DataType, std::variant<int, unsigned int>>::assign_sequence<int &>' requested here
            base::assign_sequence(std::forward<Sequence>(rhs));
                  ^
/opt/homebrew/opt/boost/include/boost/proto/transform/default.hpp:154:41: note: in instantiation of function template specialization 'boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>>::operator=<int &>' requested here
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
                                        ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:74:24: note: in instantiation of member function 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &>::operator()' requested here
                return what()(e, phoenix::env(s), actions(s));
                       ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:34:9: note: in instantiation of member function 'boost::phoenix::evaluator::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &> &, boost::proto::envns_::empty_env>::operator()' requested here
        BOOST_PROTO_TRANSFORM(evaluator)
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:228:9: note: expanded from macro 'BOOST_PROTO_TRANSFORM'
        BOOST_PROTO_TRANSFORM_(PrimitiveTransform, void)                                                        \
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:213:16: note: expanded from macro 'BOOST_PROTO_TRANSFORM_'
        return boost::proto::detail::apply_transform<transform_type(Expr const &, State const &)>()(e, s, d);   \
               ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:139:16: note: in instantiation of function template specialization 'boost::phoenix::evaluator::operator()<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &> &>' requested here
        return e(expr, ctx);
               ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/actor.hpp:230:29: note: (skipping 26 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            return phoenix::eval(*this, phoenix::context(env, default_actions()));
                            ^
/opt/homebrew/opt/boost/include/boost/function/function_template.hpp:1022:5: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
    self_type(f).swap(*this);
    ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:191:19: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:255:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<std::__wrap_iter<char *>, boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> (), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>>, 0>, boost::spirit::locals<instr::DataType>>::define<mpl_::bool_<true>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
            define<mpl::true_>(r, expr, traits::matches<qi::domain, Expr>());
            ^
include/Parser.hpp:112:11: note: in instantiation of function template specialization 'boost::spirit::qi::operator%=<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
    start %= lexeme[
          ^
src/main.cpp:52:45: note: in instantiation of member function 'ConstInstrParser<std::__wrap_iter<char *>>::ConstInstrParser' requested here
    ConstInstrParser<std::string::iterator> parser; 
                                            ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:117:9: note: candidate template ignored: substitution failure [with N = 1, Sequence = int &]
        forward_at_c(Sequence&& seq)
        ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:107:30: error: no type named 'type' in 'boost::fusion::result_of::begin<int>'
                          >::type
                          ~~~^~~~
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:116:36: note: in instantiation of template class 'boost::fusion::vector_detail::result_of::forward_at_c<int &, 0>' requested here
        inline typename result_of::forward_at_c<Sequence, N>::type
                                   ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:224:43: note: while substituting deduced template arguments into function template 'forward_at_c' [with N = 0, Sequence = int &]
                (void(store<I, T>::elem = vector_detail::forward_at_c<I>(static_cast<Sequence&&>(seq))), ...);
                                          ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:302:19: note: in instantiation of function template specialization 'boost::fusion::vector_detail::vector_data<std::integer_sequence<unsigned long, 0, 1>, instr::DataType, std::variant<int, unsigned int>>::assign_sequence<int &>' requested here
            base::assign_sequence(std::forward<Sequence>(rhs));
                  ^
/opt/homebrew/opt/boost/include/boost/proto/transform/default.hpp:154:41: note: in instantiation of function template specialization 'boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>>::operator=<int &>' requested here
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
                                        ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:74:24: note: in instantiation of member function 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &>::operator()' requested here
                return what()(e, phoenix::env(s), actions(s));
                       ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:34:9: note: (skipping 28 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
        BOOST_PROTO_TRANSFORM(evaluator)
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:228:9: note: expanded from macro 'BOOST_PROTO_TRANSFORM'
        BOOST_PROTO_TRANSFORM_(PrimitiveTransform, void)                                                        \
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:213:16: note: expanded from macro 'BOOST_PROTO_TRANSFORM_'
        return boost::proto::detail::apply_transform<transform_type(Expr const &, State const &)>()(e, s, d);   \
               ^
/opt/homebrew/opt/boost/include/boost/function/function_template.hpp:1022:5: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
    self_type(f).swap(*this);
    ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:191:19: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:255:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<std::__wrap_iter<char *>, boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> (), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>>, 0>, boost::spirit::locals<instr::DataType>>::define<mpl_::bool_<true>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
            define<mpl::true_>(r, expr, traits::matches<qi::domain, Expr>());
            ^
include/Parser.hpp:112:11: note: in instantiation of function template specialization 'boost::spirit::qi::operator%=<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
    start %= lexeme[
          ^
src/main.cpp:52:45: note: in instantiation of member function 'ConstInstrParser<std::__wrap_iter<char *>>::ConstInstrParser' requested here
    ConstInstrParser<std::string::iterator> parser; 
                                            ^
In file included from src/main.cpp:3:
In file included from include/Parser.hpp:8:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/include/qi.hpp:16:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/action.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/meta_compiler.hpp:15:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/domain.hpp:18:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/support/context.hpp:24:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/include/transform.hpp:11:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/algorithm/transformation/transform.hpp:11:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/view/transform_view/transform_view.hpp:22:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector10.hpp:25:
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:224:43: error: no matching function for call to 'forward_at_c'
                (void(store<I, T>::elem = vector_detail::forward_at_c<I>(static_cast<Sequence&&>(seq))), ...);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:302:19: note: in instantiation of function template specialization 'boost::fusion::vector_detail::vector_data<std::integer_sequence<unsigned long, 0, 1>, instr::DataType, std::variant<int, unsigned int>>::assign_sequence<int &>' requested here
            base::assign_sequence(std::forward<Sequence>(rhs));
                  ^
/opt/homebrew/opt/boost/include/boost/proto/transform/default.hpp:154:41: note: in instantiation of function template specialization 'boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>>::operator=<int &>' requested here
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
                                        ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:74:24: note: in instantiation of member function 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &>::operator()' requested here
                return what()(e, phoenix::env(s), actions(s));
                       ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:34:9: note: in instantiation of member function 'boost::phoenix::evaluator::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &> &, boost::proto::envns_::empty_env>::operator()' requested here
        BOOST_PROTO_TRANSFORM(evaluator)
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:228:9: note: expanded from macro 'BOOST_PROTO_TRANSFORM'
        BOOST_PROTO_TRANSFORM_(PrimitiveTransform, void)                                                        \
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:213:16: note: expanded from macro 'BOOST_PROTO_TRANSFORM_'
        return boost::proto::detail::apply_transform<transform_type(Expr const &, State const &)>()(e, s, d);   \
               ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:139:16: note: in instantiation of function template specialization 'boost::phoenix::evaluator::operator()<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &> &>' requested here
        return e(expr, ctx);
               ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/actor.hpp:230:29: note: (skipping 26 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            return phoenix::eval(*this, phoenix::context(env, default_actions()));
                            ^
/opt/homebrew/opt/boost/include/boost/function/function_template.hpp:1022:5: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
    self_type(f).swap(*this);
    ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:191:19: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:255:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<std::__wrap_iter<char *>, boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> (), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>>, 0>, boost::spirit::locals<instr::DataType>>::define<mpl_::bool_<true>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
            define<mpl::true_>(r, expr, traits::matches<qi::domain, Expr>());
            ^
include/Parser.hpp:112:11: note: in instantiation of function template specialization 'boost::spirit::qi::operator%=<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
    start %= lexeme[
          ^
src/main.cpp:52:45: note: in instantiation of member function 'ConstInstrParser<std::__wrap_iter<char *>>::ConstInstrParser' requested here
    ConstInstrParser<std::string::iterator> parser; 
                                            ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:117:9: note: candidate template ignored: substitution failure [with N = 0, Sequence = int &]
        forward_at_c(Sequence&& seq)
        ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:107:30: error: no type named 'type' in 'boost::fusion::result_of::begin<unsigned int>'
                          >::type
                          ~~~^~~~
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:116:36: note: in instantiation of template class 'boost::fusion::vector_detail::result_of::forward_at_c<unsigned int &, 1>' requested here
        inline typename result_of::forward_at_c<Sequence, N>::type
                                   ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:224:43: note: while substituting deduced template arguments into function template 'forward_at_c' [with N = 1, Sequence = unsigned int &]
                (void(store<I, T>::elem = vector_detail::forward_at_c<I>(static_cast<Sequence&&>(seq))), ...);
                                          ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:302:19: note: in instantiation of function template specialization 'boost::fusion::vector_detail::vector_data<std::integer_sequence<unsigned long, 0, 1>, instr::DataType, std::variant<int, unsigned int>>::assign_sequence<unsigned int &>' requested here
            base::assign_sequence(std::forward<Sequence>(rhs));
                  ^
/opt/homebrew/opt/boost/include/boost/proto/transform/default.hpp:154:41: note: in instantiation of function template specialization 'boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>>::operator=<unsigned int &>' requested here
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
                                        ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:74:24: note: in instantiation of member function 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<unsigned int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &>::operator()' requested here
                return what()(e, phoenix::env(s), actions(s));
                       ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:34:9: note: (skipping 28 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
        BOOST_PROTO_TRANSFORM(evaluator)
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:228:9: note: expanded from macro 'BOOST_PROTO_TRANSFORM'
        BOOST_PROTO_TRANSFORM_(PrimitiveTransform, void)                                                        \
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:213:16: note: expanded from macro 'BOOST_PROTO_TRANSFORM_'
        return boost::proto::detail::apply_transform<transform_type(Expr const &, State const &)>()(e, s, d);   \
               ^
/opt/homebrew/opt/boost/include/boost/function/function_template.hpp:1022:5: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
    self_type(f).swap(*this);
    ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:191:19: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:255:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<std::__wrap_iter<char *>, boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> (), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>>, 0>, boost::spirit::locals<instr::DataType>>::define<mpl_::bool_<true>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
            define<mpl::true_>(r, expr, traits::matches<qi::domain, Expr>());
            ^
include/Parser.hpp:112:11: note: in instantiation of function template specialization 'boost::spirit::qi::operator%=<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
    start %= lexeme[
          ^
src/main.cpp:52:45: note: in instantiation of member function 'ConstInstrParser<std::__wrap_iter<char *>>::ConstInstrParser' requested here
    ConstInstrParser<std::string::iterator> parser; 
                                            ^
In file included from src/main.cpp:3:
In file included from include/Parser.hpp:8:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/include/qi.hpp:16:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/action.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/meta_compiler.hpp:15:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/domain.hpp:18:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/support/context.hpp:24:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/include/transform.hpp:11:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/algorithm/transformation/transform.hpp:11:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/view/transform_view/transform_view.hpp:22:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector10.hpp:25:
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:224:43: error: no matching function for call to 'forward_at_c'
                (void(store<I, T>::elem = vector_detail::forward_at_c<I>(static_cast<Sequence&&>(seq))), ...);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:302:19: note: in instantiation of function template specialization 'boost::fusion::vector_detail::vector_data<std::integer_sequence<unsigned long, 0, 1>, instr::DataType, std::variant<int, unsigned int>>::assign_sequence<unsigned int &>' requested here
            base::assign_sequence(std::forward<Sequence>(rhs));
                  ^
/opt/homebrew/opt/boost/include/boost/proto/transform/default.hpp:154:41: note: in instantiation of function template specialization 'boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>>::operator=<unsigned int &>' requested here
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
                                        ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:74:24: note: in instantiation of member function 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<unsigned int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &>::operator()' requested here
                return what()(e, phoenix::env(s), actions(s));
                       ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:34:9: note: in instantiation of member function 'boost::phoenix::evaluator::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<unsigned int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &> &, boost::proto::envns_::empty_env>::operator()' requested here
        BOOST_PROTO_TRANSFORM(evaluator)
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:228:9: note: expanded from macro 'BOOST_PROTO_TRANSFORM'
        BOOST_PROTO_TRANSFORM_(PrimitiveTransform, void)                                                        \
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:213:16: note: expanded from macro 'BOOST_PROTO_TRANSFORM_'
        return boost::proto::detail::apply_transform<transform_type(Expr const &, State const &)>()(e, s, d);   \
               ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:139:16: note: in instantiation of function template specialization 'boost::phoenix::evaluator::operator()<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<unsigned int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &> &>' requested here
        return e(expr, ctx);
               ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/actor.hpp:230:29: note: (skipping 26 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            return phoenix::eval(*this, phoenix::context(env, default_actions()));
                            ^
/opt/homebrew/opt/boost/include/boost/function/function_template.hpp:1022:5: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
    self_type(f).swap(*this);
    ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:191:19: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:255:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<std::__wrap_iter<char *>, boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> (), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>>, 0>, boost::spirit::locals<instr::DataType>>::define<mpl_::bool_<true>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
            define<mpl::true_>(r, expr, traits::matches<qi::domain, Expr>());
            ^
include/Parser.hpp:112:11: note: in instantiation of function template specialization 'boost::spirit::qi::operator%=<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
    start %= lexeme[
          ^
src/main.cpp:52:45: note: in instantiation of member function 'ConstInstrParser<std::__wrap_iter<char *>>::ConstInstrParser' requested here
    ConstInstrParser<std::string::iterator> parser; 
                                            ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:117:9: note: candidate template ignored: substitution failure [with N = 1, Sequence = unsigned int &]
        forward_at_c(Sequence&& seq)
        ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:107:30: error: no type named 'type' in 'boost::fusion::result_of::begin<unsigned int>'
                          >::type
                          ~~~^~~~
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:116:36: note: in instantiation of template class 'boost::fusion::vector_detail::result_of::forward_at_c<unsigned int &, 0>' requested here
        inline typename result_of::forward_at_c<Sequence, N>::type
                                   ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:224:43: note: while substituting deduced template arguments into function template 'forward_at_c' [with N = 0, Sequence = unsigned int &]
                (void(store<I, T>::elem = vector_detail::forward_at_c<I>(static_cast<Sequence&&>(seq))), ...);
                                          ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:302:19: note: in instantiation of function template specialization 'boost::fusion::vector_detail::vector_data<std::integer_sequence<unsigned long, 0, 1>, instr::DataType, std::variant<int, unsigned int>>::assign_sequence<unsigned int &>' requested here
            base::assign_sequence(std::forward<Sequence>(rhs));
                  ^
/opt/homebrew/opt/boost/include/boost/proto/transform/default.hpp:154:41: note: in instantiation of function template specialization 'boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>>::operator=<unsigned int &>' requested here
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
                                        ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:74:24: note: in instantiation of member function 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<unsigned int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &>::operator()' requested here
                return what()(e, phoenix::env(s), actions(s));
                       ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:34:9: note: (skipping 28 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
        BOOST_PROTO_TRANSFORM(evaluator)
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:228:9: note: expanded from macro 'BOOST_PROTO_TRANSFORM'
        BOOST_PROTO_TRANSFORM_(PrimitiveTransform, void)                                                        \
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:213:16: note: expanded from macro 'BOOST_PROTO_TRANSFORM_'
        return boost::proto::detail::apply_transform<transform_type(Expr const &, State const &)>()(e, s, d);   \
               ^
/opt/homebrew/opt/boost/include/boost/function/function_template.hpp:1022:5: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
    self_type(f).swap(*this);
    ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:191:19: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:255:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<std::__wrap_iter<char *>, boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> (), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>>, 0>, boost::spirit::locals<instr::DataType>>::define<mpl_::bool_<true>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
            define<mpl::true_>(r, expr, traits::matches<qi::domain, Expr>());
            ^
include/Parser.hpp:112:11: note: in instantiation of function template specialization 'boost::spirit::qi::operator%=<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
    start %= lexeme[
          ^
src/main.cpp:52:45: note: in instantiation of member function 'ConstInstrParser<std::__wrap_iter<char *>>::ConstInstrParser' requested here
    ConstInstrParser<std::string::iterator> parser; 
                                            ^
In file included from src/main.cpp:3:
In file included from include/Parser.hpp:8:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/include/qi.hpp:16:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/action.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/action/action.hpp:14:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/meta_compiler.hpp:15:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/qi/domain.hpp:18:
In file included from /opt/homebrew/opt/boost/include/boost/spirit/home/support/context.hpp:24:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/include/transform.hpp:11:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/algorithm/transformation/transform.hpp:11:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/view/transform_view/transform_view.hpp:22:
In file included from /opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector10.hpp:25:
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:224:43: error: no matching function for call to 'forward_at_c'
                (void(store<I, T>::elem = vector_detail::forward_at_c<I>(static_cast<Sequence&&>(seq))), ...);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:302:19: note: in instantiation of function template specialization 'boost::fusion::vector_detail::vector_data<std::integer_sequence<unsigned long, 0, 1>, instr::DataType, std::variant<int, unsigned int>>::assign_sequence<unsigned int &>' requested here
            base::assign_sequence(std::forward<Sequence>(rhs));
                  ^
/opt/homebrew/opt/boost/include/boost/proto/transform/default.hpp:154:41: note: in instantiation of function template specialization 'boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>>::operator=<unsigned int &>' requested here
        BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
                                        ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:74:24: note: in instantiation of member function 'boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<unsigned int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &>::operator()' requested here
                return what()(e, phoenix::env(s), actions(s));
                       ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:34:9: note: in instantiation of member function 'boost::phoenix::evaluator::impl<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<unsigned int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &> &, boost::proto::envns_::empty_env>::operator()' requested here
        BOOST_PROTO_TRANSFORM(evaluator)
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:228:9: note: expanded from macro 'BOOST_PROTO_TRANSFORM'
        BOOST_PROTO_TRANSFORM_(PrimitiveTransform, void)                                                        \
        ^
/opt/homebrew/opt/boost/include/boost/proto/transform/impl.hpp:213:16: note: expanded from macro 'BOOST_PROTO_TRANSFORM_'
        return boost::proto::detail::apply_transform<transform_type(Expr const &, State const &)>()(e, s, d);   \
               ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/meta_grammar.hpp:139:16: note: in instantiation of function template specialization 'boost::phoenix::evaluator::operator()<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> *, boost::fusion::vector<unsigned int &> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, bool &> &, const boost::phoenix::default_actions &> &>' requested here
        return e(expr, ctx);
               ^
/opt/homebrew/opt/boost/include/boost/phoenix/core/actor.hpp:230:29: note: (skipping 26 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
            return phoenix::eval(*this, phoenix::context(env, default_actions()));
                            ^
/opt/homebrew/opt/boost/include/boost/function/function_template.hpp:1022:5: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
    self_type(f).swap(*this);
    ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:191:19: note: in instantiation of function template specialization 'boost::function<bool (std::__wrap_iter<char *> &, const std::__wrap_iter<char *> &, boost::spirit::context<boost::fusion::cons<boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> &>, boost::fusion::vector<instr::DataType>> &, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>> &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::lexeme_directive<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::reference<boost::spirit::qi::symbols<char, instr::DataType>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>, boost::fusion::cons<boost::spirit::qi::literal_string<const char (&)[8], true>, boost::fusion::cons<boost::spirit::qi::alternative<boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_int_parser<int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>, boost::fusion::cons<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::lazy_parser<boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, boost::spirit::unused_type>, boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::any_uint_parser<unsigned int>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>>>>>>>>>>>>>>, mpl_::bool_<true>>>' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/opt/homebrew/opt/boost/include/boost/spirit/home/qi/nonterminal/rule.hpp:255:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<std::__wrap_iter<char *>, boost::fusion::vector<instr::DataType, std::variant<int, unsigned int>> (), boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::ascii>>, 0>, boost::spirit::locals<instr::DataType>>::define<mpl_::bool_<true>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
            define<mpl::true_>(r, expr, traits::matches<qi::domain, Expr>());
            ^
include/Parser.hpp:112:11: note: in instantiation of function template specialization 'boost::spirit::qi::operator%=<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<boost::spirit::qi::symbols<char, instr::DataType> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &, boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<const char (&)[8]>, 0>>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::bitwise_or, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::int_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::lazy_terminal<boost::spirit::tag::eps, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list2<boost::spirit::terminal<boost::spirit::tag::eps>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::equal_to, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::local_variable<0>>, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<instr::DataType>, 0>>>, 2>>>, 2>>, 1>>, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::spirit::terminal<boost::spirit::tag::uint_> &, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::phoenix::actor<boost::spirit::attribute<0>>, boost::phoenix::actor<boost::spirit::argument<0>>>, 2>> &>, 2> &>, 2> &>, 2> &>, 2> &>, 2>>' requested here
    start %= lexeme[
          ^
src/main.cpp:52:45: note: in instantiation of member function 'ConstInstrParser<std::__wrap_iter<char *>>::ConstInstrParser' requested here
    ConstInstrParser<std::string::iterator> parser; 
                                            ^
/opt/homebrew/opt/boost/include/boost/fusion/container/vector/vector.hpp:117:9: note: candidate template ignored: substitution failure [with N = 0, Sequence = unsigned int &]
        forward_at_c(Sequence&& seq)
        ^
8 errors generated.
make: *** [obj/main.o] Error 1
